{"ast":null,"code":"var _jsxFileName = \"C:\\\\KURALBOT\\\\my-frontend\\\\src\\\\KuralSearch.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport styles from './KuralSearch.module.css';\nimport { franc } from 'franc'; // Import the franc library for language detection\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KuralSearch = () => {\n  _s();\n  const [selectedField, setSelectedField] = useState('');\n  const [inputValue, setInputValue] = useState('');\n  const [results, setResults] = useState([]);\n  const [error, setError] = useState('');\n  const detectLanguage = text => {\n    const langCode = franc(text);\n    return langCode === 'tam' ? 'tamil' : 'english'; // You can add more conditions for other languages if needed\n  };\n  const handleSearch = async () => {\n    console.log('Input Value:', inputValue);\n\n    // Detect language based on input value\n    const language = detectLanguage(inputValue);\n    console.log('Detected Language:', language);\n\n    // Variable to hold the actual field used for the query\n    let searchField = selectedField;\n\n    // Set the searchField based on the detected language and selected field\n    if (selectedField === 'chapterName') {\n      searchField = language === 'tamil' ? 'chapterName' : 'Chapter_Eng';\n    } else if (selectedField === 'sectionName') {\n      searchField = language === 'tamil' ? 'sectionName' : 'section_eng';\n    } else if (selectedField === 'verse') {\n      searchField = 'verse'; // Assuming no language difference for verses\n    }\n    try {\n      const response = await axios.get('http://localhost:5000/api/kurals', {\n        params: {\n          [searchField]: inputValue\n        }\n      });\n      setResults(response.data);\n      setError('');\n    } catch (err) {\n      setError('Error fetching data');\n      setResults([]);\n    }\n  };\n  const handleFieldSelect = field => {\n    setSelectedField(field);\n    setInputValue(''); // Reset input when field changes\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Search Thirukkural\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.buttonContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleFieldSelect('chapterName'),\n        children: \"Chapter Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleFieldSelect('sectionName'),\n        children: \"Section Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleFieldSelect('verse'),\n        children: \"Verse\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), selectedField && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [selectedField.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase()), \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: selectedField === 'number' ? 'number' : 'text',\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        margin: '20px auto'\n      },\n      onClick: handleSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.error,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: results.map((kural, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Chapter Name: \", kural.chapterName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Section Name: \", kural.sectionName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Verse: \", kural.verse]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: kural.translation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: kural.explanation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Number: \", kural.number]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n_s(KuralSearch, \"OnU/UXUHk2uCGrRGscZbgbYXox0=\");\n_c = KuralSearch;\nexport default KuralSearch;\nvar _c;\n$RefreshReg$(_c, \"KuralSearch\");","map":{"version":3,"names":["React","useState","axios","styles","franc","jsxDEV","_jsxDEV","KuralSearch","_s","selectedField","setSelectedField","inputValue","setInputValue","results","setResults","error","setError","detectLanguage","text","langCode","handleSearch","console","log","language","searchField","response","get","params","data","err","handleFieldSelect","field","className","container","children","fileName","_jsxFileName","lineNumber","columnNumber","buttonContainer","onClick","replace","str","toUpperCase","type","value","onChange","e","target","style","margin","map","kural","index","chapterName","sectionName","verse","translation","explanation","number","_c","$RefreshReg$"],"sources":["C:/KURALBOT/my-frontend/src/KuralSearch.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport styles from './KuralSearch.module.css';\r\nimport { franc } from 'franc'; // Import the franc library for language detection\r\n\r\nconst KuralSearch = () => {\r\n    const [selectedField, setSelectedField] = useState('');\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [results, setResults] = useState([]);\r\n    const [error, setError] = useState('');\r\n\r\n    const detectLanguage = (text) => {\r\n        const langCode = franc(text);\r\n        return langCode === 'tam' ? 'tamil' : 'english'; // You can add more conditions for other languages if needed\r\n    };\r\n\r\n    const handleSearch = async () => {\r\n        console.log('Input Value:', inputValue);\r\n\r\n        // Detect language based on input value\r\n        const language = detectLanguage(inputValue);\r\n        console.log('Detected Language:', language);\r\n\r\n        // Variable to hold the actual field used for the query\r\n        let searchField = selectedField;\r\n\r\n        // Set the searchField based on the detected language and selected field\r\n        if (selectedField === 'chapterName') {\r\n            searchField = language === 'tamil' ? 'chapterName' : 'Chapter_Eng';\r\n        } else if (selectedField === 'sectionName') {\r\n            searchField = language === 'tamil' ? 'sectionName' : 'section_eng';\r\n        } else if (selectedField === 'verse') {\r\n            searchField = 'verse'; // Assuming no language difference for verses\r\n        }\r\n\r\n        try {\r\n            const response = await axios.get('http://localhost:5000/api/kurals', {\r\n                params: {\r\n                    [searchField]: inputValue\r\n                }\r\n            });\r\n\r\n            setResults(response.data);\r\n            setError('');\r\n        } catch (err) {\r\n            setError('Error fetching data');\r\n            setResults([]);\r\n        }\r\n    };\r\n\r\n    const handleFieldSelect = (field) => {\r\n        setSelectedField(field);\r\n        setInputValue(''); // Reset input when field changes\r\n    };\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <h1>Search Thirukkural</h1>\r\n\r\n            <div className={styles.buttonContainer}>\r\n                <button onClick={() => handleFieldSelect('chapterName')}>Chapter Name</button>\r\n                <button onClick={() => handleFieldSelect('sectionName')}>Section Name</button>\r\n                <button onClick={() => handleFieldSelect('verse')}>Verse</button>\r\n            </div>\r\n\r\n            {selectedField && (\r\n                <div>\r\n                    <label>{selectedField.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase())}:</label>\r\n                    <input \r\n                        type={selectedField === 'number' ? 'number' : 'text'} \r\n                        value={inputValue} \r\n                        onChange={(e) => setInputValue(e.target.value)} \r\n                    />\r\n                </div>\r\n            )}\r\n            \r\n            <button style={{margin:'20px auto'}} onClick={handleSearch}>Search</button>\r\n\r\n            {error && <p className={styles.error}>{error}</p>}\r\n\r\n            <ul>\r\n                {results.map((kural, index) => (\r\n                    <li key={index}>\r\n                        <p>Chapter Name: {kural.chapterName}</p>\r\n                        <p>Section Name: {kural.sectionName}</p>\r\n                        <p>Verse: {kural.verse}</p>\r\n                        <p>{kural.translation}</p>\r\n                        <p>{kural.explanation}</p>\r\n                        <p>Number: {kural.number}</p>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default KuralSearch;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}