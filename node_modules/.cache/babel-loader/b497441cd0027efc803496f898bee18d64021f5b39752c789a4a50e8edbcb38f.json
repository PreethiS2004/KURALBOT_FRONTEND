{"ast":null,"code":"var _jsxFileName = \"D:\\\\KURALBOT\\\\my-frontend\\\\src\\\\KuralSearch.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport styles from './KuralSearch.module.css';\nimport words from 'words-array'; // Import if you need this library\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst KuralSearch = () => {\n  _s();\n  const [selectedField, setSelectedField] = useState('');\n  const [inputValue, setInputValue] = useState('');\n  const [results, setResults] = useState([]);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false); // Loading state\n\n  const isTamil = text => /[\\u0B80-\\u0BFF]/.test(text); // Check for Tamil characters\n\n  const isPhoneticEnglish = text => {\n    const commonPhoneticPatterns = [/* your phonetic patterns */];\n    return commonPhoneticPatterns.some(pattern => text.includes(pattern));\n  };\n  const isEnglish = async word => {\n    const response = await fetch(`https://wordsapiv1.p.rapidapi.com/words/${word}`, {\n      method: 'GET',\n      headers: {\n        'X-RapidAPI-Host': 'wordsapiv1.p.rapidapi.com',\n        'X-RapidAPI-Key': 'YOUR_RAPIDAPI_KEY' // Get your API key from RapidAPI\n      }\n    });\n    if (response.ok) {\n      const data = await response.json();\n      return true; // Valid word\n    } else {\n      return false; // Not a valid word\n    }\n  };\n  const classifyInput = async text => {\n    if (isTamil(text)) {\n      return \"Tamil\";\n    } else if (await isEnglish(text)) {\n      return \"English\";\n    } else if (isPhoneticEnglish(text)) {\n      return \"Phonetic\";\n    }\n    return null; // Unknown classification\n  };\n  const handleInput = field => {\n    setSelectedField(field);\n    setInputValue('');\n  };\n  const handleSearch = async () => {\n    setLoading(true); // Set loading state\n    let fieldName;\n    let apiUrl;\n    const classification = await classifyInput(inputValue);\n    if (selectedField === 'inputs' && classification === 'Tamil') {\n      apiUrl = 'http://localhost:5000/api/questions';\n      fieldName = 'inputs';\n    } else if (selectedField === 'inputs' && classification === 'English') {\n      apiUrl = 'http://localhost:5000/api/questions';\n      fieldName = 'english_input';\n    } else {\n      fieldName = (() => {\n        // Classify based on selected field\n        // Return appropriate fieldName based on classification\n      })();\n      apiUrl = 'http://localhost:5000/api/kurals';\n    }\n    try {\n      const response = await axios.get(apiUrl, {\n        params: {\n          [fieldName]: inputValue\n        }\n      });\n      setResults(response.data);\n      setError('');\n    } catch (err) {\n      console.error('Error fetching data:', err);\n      setError('Error fetching data');\n      setResults([]);\n    } finally {\n      setLoading(false); // Reset loading state\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Search Thirukkural\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Field:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.optionsContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.optionBox,\n          onClick: () => handleInput('chapterName'),\n          children: \"Chapter Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.optionBox,\n          onClick: () => handleInput('sectionName'),\n          children: \"Section Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.optionBox,\n          onClick: () => handleInput('verse'),\n          children: \"Verse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.optionBox,\n          onClick: () => handleInput('inputs'),\n          children: \"Other Questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), selectedField && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [selectedField.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase()), \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      disabled: loading,\n      children: loading ? 'Searching...' : 'Search'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.error,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: results.length > 0 ? results.map((kural, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: selectedField === 'inputs' ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Answer: \", kural.targets]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Chapter Name: \", kural.chapterName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Chapter Group: \", kural.chapter_group_tam]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Section Name: \", kural.sectionName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Verse: \", kural.verse]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Translation: \", kural.translation || 'Not available']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Explanation: \", kural.explanation || 'Not available']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Number: \", kural.number]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No results found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 22\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n};\n_s(KuralSearch, \"q980WgA9wPX3wYU88SQ+LDBRPVw=\");\n_c = KuralSearch;\nexport default KuralSearch;\nvar _c;\n$RefreshReg$(_c, \"KuralSearch\");","map":{"version":3,"names":["React","useState","axios","styles","words","jsxDEV","_jsxDEV","Fragment","_Fragment","KuralSearch","_s","selectedField","setSelectedField","inputValue","setInputValue","results","setResults","error","setError","loading","setLoading","isTamil","text","test","isPhoneticEnglish","commonPhoneticPatterns","some","pattern","includes","isEnglish","word","response","fetch","method","headers","ok","data","json","classifyInput","handleInput","field","handleSearch","fieldName","apiUrl","classification","get","params","err","console","className","container","children","fileName","_jsxFileName","lineNumber","columnNumber","optionsContainer","optionBox","onClick","replace","str","toUpperCase","type","value","onChange","e","target","disabled","length","map","kural","index","targets","chapterName","chapter_group_tam","sectionName","verse","translation","explanation","number","_c","$RefreshReg$"],"sources":["D:/KURALBOT/my-frontend/src/KuralSearch.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport styles from './KuralSearch.module.css';\r\nimport words from 'words-array'; // Import if you need this library\r\nconst KuralSearch = () => {\r\n    const [selectedField, setSelectedField] = useState('');\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [results, setResults] = useState([]);\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false); // Loading state\r\n\r\n    const isTamil = (text) => /[\\u0B80-\\u0BFF]/.test(text);  // Check for Tamil characters\r\n\r\n    const isPhoneticEnglish = (text) => {\r\n        const commonPhoneticPatterns = [/* your phonetic patterns */];\r\n        return commonPhoneticPatterns.some(pattern => text.includes(pattern));\r\n    };\r\n\r\n    const isEnglish = async (word) => {\r\n        const response = await fetch(`https://wordsapiv1.p.rapidapi.com/words/${word}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'X-RapidAPI-Host': 'wordsapiv1.p.rapidapi.com',\r\n                'X-RapidAPI-Key': 'YOUR_RAPIDAPI_KEY' // Get your API key from RapidAPI\r\n            }\r\n        });\r\n        \r\n        if (response.ok) {\r\n            const data = await response.json();\r\n            return true; // Valid word\r\n        } else {\r\n            return false; // Not a valid word\r\n        }\r\n    };\r\n\r\n    const classifyInput = async (text) => {\r\n        if (isTamil(text)) {\r\n            return \"Tamil\";\r\n        } else if (await isEnglish(text)) {\r\n            return \"English\";\r\n        } else if (isPhoneticEnglish(text)) {\r\n            return \"Phonetic\";\r\n        }\r\n        return null; // Unknown classification\r\n    };\r\n\r\n    const handleInput = (field) => {\r\n        setSelectedField(field);\r\n        setInputValue('');\r\n    };\r\n\r\n    const handleSearch = async () => {\r\n        setLoading(true); // Set loading state\r\n        let fieldName;\r\n        let apiUrl;\r\n\r\n        const classification = await classifyInput(inputValue);\r\n\r\n        if (selectedField === 'inputs' && classification === 'Tamil') {\r\n            apiUrl = 'http://localhost:5000/api/questions';\r\n            fieldName = 'inputs';\r\n        } else if (selectedField === 'inputs' && classification === 'English') {\r\n            apiUrl = 'http://localhost:5000/api/questions';\r\n            fieldName = 'english_input';\r\n        } else {\r\n            fieldName = (() => {\r\n                // Classify based on selected field\r\n                // Return appropriate fieldName based on classification\r\n            })();\r\n            apiUrl = 'http://localhost:5000/api/kurals'; \r\n        }\r\n\r\n        try {\r\n            const response = await axios.get(apiUrl, { params: { [fieldName]: inputValue } });\r\n            setResults(response.data);\r\n            setError('');\r\n        } catch (err) {\r\n            console.error('Error fetching data:', err);\r\n            setError('Error fetching data');\r\n            setResults([]);\r\n        } finally {\r\n            setLoading(false); // Reset loading state\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <h1>Search Thirukkural</h1>\r\n            \r\n            <div>\r\n                <label>Select Field:</label>\r\n                <div className={styles.optionsContainer}>\r\n                    <div className={styles.optionBox} onClick={() => handleInput('chapterName')}>Chapter Name</div>\r\n                    <div className={styles.optionBox} onClick={() => handleInput('sectionName')}>Section Name</div>\r\n                    <div className={styles.optionBox} onClick={() => handleInput('verse')}>Verse</div>\r\n                    <div className={styles.optionBox} onClick={() => handleInput('inputs')}>Other Questions</div>\r\n                </div>\r\n            </div>\r\n\r\n            {selectedField && (\r\n                <div>\r\n                    <label>{selectedField.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase())}:</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        value={inputValue} \r\n                        onChange={(e) => setInputValue(e.target.value)} \r\n                    />\r\n                </div>\r\n            )}\r\n            \r\n            <button onClick={handleSearch} disabled={loading}>\r\n                {loading ? 'Searching...' : 'Search'}\r\n            </button>\r\n\r\n            {error && <p className={styles.error}>{error}</p>}\r\n\r\n            <ul>\r\n                {results.length > 0 ? results.map((kural, index) => (\r\n                    <li key={index}>\r\n                         {selectedField === 'inputs' ? (\r\n                            <p>Answer: {kural.targets}</p>\r\n                        ) : (\r\n                            <>\r\n                                <p>Chapter Name: {kural.chapterName}</p>\r\n                                <p>Chapter Group: {kural.chapter_group_tam}</p>\r\n                                <p>Section Name: {kural.sectionName}</p>\r\n                                <p>Verse: {kural.verse}</p>\r\n                                <p>Translation: {kural.translation || 'Not available'}</p>\r\n                                <p>Explanation: {kural.explanation || 'Not available'}</p>\r\n                                <p>Number: {kural.number}</p>\r\n                            </>\r\n                        )}\r\n                    </li>\r\n                )) : <p>No results found</p>}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default KuralSearch;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}