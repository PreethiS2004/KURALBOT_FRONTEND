{"ast":null,"code":"var _jsxFileName = \"C:\\\\KURALBOT\\\\my-frontend\\\\src\\\\KuralSearch.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport styles from './KuralSearch.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KuralSearch = () => {\n  _s();\n  const [selectedField, setSelectedField] = useState('');\n  const [inputValue, setInputValue] = useState('');\n  const [results, setResults] = useState([]);\n  const [error, setError] = useState('');\n\n  // Update handleSearch function in KuralSearch.js\n  const handleSearch = async () => {\n    try {\n      if (selectedField === 'otherQuestions') {\n        const response = await axios.get('http://localhost:5000/api/other-questions', {\n          params: {\n            userInput: inputValue,\n            field: 'inputs' // Specify the field you want to query\n          }\n        });\n        setResults(response.data.numbers);\n      } else {\n        const response = await axios.get('http://localhost:5000/api/kurals', {\n          params: {\n            [selectedField]: inputValue\n          }\n        });\n        setResults(response.data);\n      }\n      setError('');\n    } catch (err) {\n      setError('Error fetching data');\n      setResults([]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Search Thirukkural\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Field:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedField,\n        onChange: e => setSelectedField(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a field\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"chapterName\",\n          children: \"Chapter Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"sectionName\",\n          children: \"Section Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"verse\",\n          children: \"Verse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"otherQuestions\",\n          children: \"Other Questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), selectedField && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [selectedField.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase()), \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.error,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: results.map((kural, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Chapter Name: \", kural.chapterName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Section Name: \", kural.sectionName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Verse: \", kural.verse]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: kural.translation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: kural.explanation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Number: \", kural.number]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(KuralSearch, \"OnU/UXUHk2uCGrRGscZbgbYXox0=\");\n_c = KuralSearch;\nexport default KuralSearch;\nvar _c;\n$RefreshReg$(_c, \"KuralSearch\");","map":{"version":3,"names":["React","useState","axios","styles","jsxDEV","_jsxDEV","KuralSearch","_s","selectedField","setSelectedField","inputValue","setInputValue","results","setResults","error","setError","handleSearch","response","get","params","userInput","field","data","numbers","err","className","container","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","replace","str","toUpperCase","type","onClick","map","kural","index","chapterName","sectionName","verse","translation","explanation","number","_c","$RefreshReg$"],"sources":["C:/KURALBOT/my-frontend/src/KuralSearch.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport styles from './KuralSearch.module.css';\r\n\r\nconst KuralSearch = () => {\r\n    const [selectedField, setSelectedField] = useState('');\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [results, setResults] = useState([]);\r\n    const [error, setError] = useState('');\r\n\r\n    // Update handleSearch function in KuralSearch.js\r\nconst handleSearch = async () => {\r\n    try {\r\n        if (selectedField === 'otherQuestions') {\r\n            const response = await axios.get('http://localhost:5000/api/other-questions', {\r\n                params: {\r\n                    userInput: inputValue,\r\n                    field: 'inputs' // Specify the field you want to query\r\n                }\r\n            });\r\n            setResults(response.data.numbers);\r\n        } else {\r\n            const response = await axios.get('http://localhost:5000/api/kurals', {\r\n                params: {\r\n                    [selectedField]: inputValue\r\n                }\r\n            });\r\n            setResults(response.data);\r\n        }\r\n        setError('');\r\n    } catch (err) {\r\n        setError('Error fetching data');\r\n        setResults([]);\r\n    }\r\n};\r\n\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <h1>Search Thirukkural</h1>\r\n            \r\n            <div>\r\n                <label>Select Field:</label>\r\n                <select value={selectedField} onChange={(e) => setSelectedField(e.target.value)}>\r\n                    <option value=\"\">Select a field</option>\r\n                    <option value=\"chapterName\">Chapter Name</option>\r\n                    <option value=\"sectionName\">Section Name</option>\r\n                    <option value=\"verse\">Verse</option>\r\n                    <option value=\"otherQuestions\">Other Questions</option> \r\n                </select>\r\n            </div>\r\n\r\n            {selectedField && (\r\n                <div>\r\n                    <label>{selectedField.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase())}:</label>\r\n                    <input type=\"text\" value={inputValue} onChange={(e) => setInputValue(e.target.value)} />\r\n                </div>\r\n            )}\r\n            \r\n            <button onClick={handleSearch}>Search</button>\r\n\r\n            {error && <p className={styles.error}>{error}</p>}\r\n\r\n            <ul>\r\n                {results.map((kural, index) => (\r\n                    <li key={index}>\r\n                        <p>Chapter Name: {kural.chapterName}</p>\r\n                        <p>Section Name: {kural.sectionName}</p>\r\n                        <p>Verse: {kural.verse}</p>\r\n                        <p>{kural.translation}</p>\r\n                        <p>{kural.explanation}</p>\r\n                        <p>Number: {kural.number}</p>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default KuralSearch;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}