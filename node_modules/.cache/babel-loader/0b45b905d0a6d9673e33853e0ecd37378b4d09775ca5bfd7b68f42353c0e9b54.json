{"ast":null,"code":"var _jsxFileName = \"D:\\\\KURALBOT\\\\my-frontend\\\\src\\\\KuralSearch.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport styles from './KuralSearch.module.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst KuralSearch = () => {\n  _s();\n  const [selectedField, setSelectedField] = useState('');\n  const [inputValue, setInputValue] = useState('');\n  const [results, setResults] = useState([]);\n  const [allDetails, setAllDetails] = useState([]); // New state for all details\n  const [expandedChapters, setExpandedChapters] = useState([]); // Tracks expanded chapters\n  const [expandedSections, setExpandedSections] = useState({}); // Tracks expanded sections\n  const [error, setError] = useState('');\n  const isTamil = text => /[\\u0B80-\\u0BFF]/.test(text);\n  const isEnglishWord = async sentence => {\n    const words = sentence.split(' ');\n    let validWordCount = 0;\n    for (const word of words) {\n      try {\n        const response = await axios.get(`https://api.dictionaryapi.dev/api/v2/entries/en/${word}`);\n        if (response.data && response.data.length > 0 && response.data[0].word.toLowerCase() === word.toLowerCase()) {\n          validWordCount++;\n        }\n      } catch (error) {\n        if (error.response && error.response.status === 404) {\n          continue;\n        } else {\n          console.error(`Error checking word \"${word}\":`, error);\n        }\n      }\n    }\n    return validWordCount >= words.length / 2;\n  };\n  const classifyInput = async text => {\n    if (isTamil(text)) {\n      return \"Tamil\";\n    }\n    const englishCheckResult = await isEnglishWord(text);\n    return englishCheckResult ? \"English\" : \"Phonetic\";\n  };\n  const handleInput = field => {\n    setSelectedField(field);\n    setInputValue('');\n    setAllDetails([]); // Clear all details when a field is selected\n  };\n  const handleSearch = async () => {\n    let fieldName;\n    let apiUrl;\n    const classification = await classifyInput(inputValue);\n    if (selectedField === 'inputs' && classification === 'Tamil') {\n      apiUrl = 'http://localhost:5000/api/questions';\n      fieldName = 'inputs';\n    } else if (selectedField === 'inputs' && classification === 'English') {\n      apiUrl = 'http://localhost:5000/api/questions';\n      fieldName = 'english_input';\n    } else {\n      fieldName = (() => {\n        if (selectedField === 'chapterName' && classification === 'English') {\n          return 'Chapter_Eng';\n        }\n        if (selectedField === 'chapterName' && classification === 'Phonetic') {\n          return 'Chapter';\n        }\n        if (selectedField === 'sectionName' && classification === 'English') {\n          return 'section_eng';\n        }\n        if (selectedField === 'sectionName' && classification === 'Phonetic') {\n          return 'section_trans';\n        }\n        if (selectedField === 'verse' && classification === 'English') {\n          return 'translation';\n        }\n        if (selectedField === 'verse' && classification === 'Phonetic') {\n          return 'verse';\n        }\n        return selectedField;\n      })();\n      apiUrl = 'http://localhost:5000/api/kurals';\n    }\n    try {\n      const response = await axios.get(apiUrl, {\n        params: {\n          [fieldName]: inputValue\n        }\n      });\n      setResults(response.data);\n      setError('');\n    } catch (err) {\n      console.error('Error fetching data:', err);\n      setError('Error fetching data');\n      setResults([]);\n    }\n  };\n  const fetchAllDetails = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/all-details');\n      setAllDetails(response.data); // Set the all details data\n      setError('');\n    } catch (err) {\n      console.error('Error fetching all details:', err);\n      setError('Error fetching all details');\n      setAllDetails([]);\n    }\n  };\n  const toggleChapter = chapterId => {\n    setExpandedChapters(prev => prev.includes(chapterId) ? prev.filter(id => id !== chapterId) : [...prev, chapterId]);\n  };\n  const toggleSection = (chapterId, sectionIndex) => {\n    setExpandedSections(prev => {\n      var _prev$chapterId;\n      return {\n        ...prev,\n        [chapterId]: (_prev$chapterId = prev[chapterId]) !== null && _prev$chapterId !== void 0 && _prev$chapterId.includes(sectionIndex) ? prev[chapterId].filter(idx => idx !== sectionIndex) : [...(prev[chapterId] || []), sectionIndex]\n      };\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Search Thirukkural\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Field:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.optionsContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.optionBox,\n          onClick: () => handleInput('chapterName'),\n          children: \"Chapter Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.optionBox,\n          onClick: () => handleInput('sectionName'),\n          children: \"Section Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.optionBox,\n          onClick: () => handleInput('verse'),\n          children: \"Verse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.optionBox,\n          onClick: () => handleInput('inputs'),\n          children: \"Other Questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.optionBox,\n          onClick: fetchAllDetails,\n          children: \"All Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this), selectedField && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [selectedField.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase()), \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.error,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: results.length > 0 ? results.map((kural, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: selectedField === 'inputs' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Answer: \", kural.targets]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Number: \", kural.number]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Chapter Name: \", kural.chapterName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Chapter Group: \", kural.chapter_group_tam]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Section Name: \", kural.sectionName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Verse: \", kural.verse]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: kural.translation || 'Not available'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: kural.explanation || 'Not available'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Number: \", kural.number]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No results found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 22\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this), allDetails.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"All Details:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: allDetails.slice(0, 3).map((chapter, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            onClick: () => toggleChapter(chapter._id),\n            children: [chapter._id, \" - \", chapter.sections.reduce((sum, section) => sum + section.verses.length, 0), expandedChapters.includes(chapter._id) ? \" ▲\" : \" ▼\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 33\n          }, this), expandedChapters.includes(chapter._id) && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: chapter.sections.map((section, secIndex) => {\n              var _expandedSections$cha, _expandedSections$cha2;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  onClick: () => toggleSection(chapter._id, secIndex),\n                  children: [section.sectionName, \"- \", section.verses.length, (_expandedSections$cha = expandedSections[chapter._id]) !== null && _expandedSections$cha !== void 0 && _expandedSections$cha.includes(secIndex) ? \" ^\" : \" ▼\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 49\n                }, this), ((_expandedSections$cha2 = expandedSections[chapter._id]) === null || _expandedSections$cha2 === void 0 ? void 0 : _expandedSections$cha2.includes(secIndex)) && /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: section.verses.map((verse, verseIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"Verse: \", verse.verse]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 206,\n                      columnNumber: 65\n                    }, this)\n                  }, verseIndex, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 61\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 53\n                }, this)]\n              }, secIndex, true, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 45\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 37\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 9\n  }, this);\n};\n_s(KuralSearch, \"+KUF0ZPExtYNQpMwwI0PNdYn10g=\");\n_c = KuralSearch;\nexport default KuralSearch;\nvar _c;\n$RefreshReg$(_c, \"KuralSearch\");","map":{"version":3,"names":["React","useState","axios","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","KuralSearch","_s","selectedField","setSelectedField","inputValue","setInputValue","results","setResults","allDetails","setAllDetails","expandedChapters","setExpandedChapters","expandedSections","setExpandedSections","error","setError","isTamil","text","test","isEnglishWord","sentence","words","split","validWordCount","word","response","get","data","length","toLowerCase","status","console","classifyInput","englishCheckResult","handleInput","field","handleSearch","fieldName","apiUrl","classification","params","err","fetchAllDetails","toggleChapter","chapterId","prev","includes","filter","id","toggleSection","sectionIndex","_prev$chapterId","idx","className","container","children","fileName","_jsxFileName","lineNumber","columnNumber","optionsContainer","optionBox","onClick","replace","str","toUpperCase","type","value","onChange","e","target","map","kural","index","targets","number","chapterName","chapter_group_tam","sectionName","verse","translation","explanation","slice","chapter","_id","sections","reduce","sum","section","verses","secIndex","_expandedSections$cha","_expandedSections$cha2","verseIndex","_c","$RefreshReg$"],"sources":["D:/KURALBOT/my-frontend/src/KuralSearch.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport styles from './KuralSearch.module.css';\r\n\r\nconst KuralSearch = () => {\r\n    const [selectedField, setSelectedField] = useState('');\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [results, setResults] = useState([]);\r\n    const [allDetails, setAllDetails] = useState([]); // New state for all details\r\n    const [expandedChapters, setExpandedChapters] = useState([]); // Tracks expanded chapters\r\n    const [expandedSections, setExpandedSections] = useState({}); // Tracks expanded sections\r\n    const [error, setError] = useState('');\r\n\r\n    const isTamil = (text) => /[\\u0B80-\\u0BFF]/.test(text);\r\n\r\n    const isEnglishWord = async (sentence) => {\r\n        const words = sentence.split(' ');\r\n        let validWordCount = 0;\r\n        for (const word of words) {\r\n            try {\r\n                const response = await axios.get(`https://api.dictionaryapi.dev/api/v2/entries/en/${word}`);\r\n                if (response.data && response.data.length > 0 && response.data[0].word.toLowerCase() === word.toLowerCase()) {\r\n                    validWordCount++;\r\n                }\r\n            } catch (error) {\r\n                if (error.response && error.response.status === 404) {\r\n                    continue;\r\n                } else {\r\n                    console.error(`Error checking word \"${word}\":`, error);\r\n                }\r\n            }\r\n        }\r\n        return validWordCount >= words.length / 2;\r\n    };\r\n\r\n    const classifyInput = async (text) => {\r\n        if (isTamil(text)) {\r\n            return \"Tamil\";\r\n        }\r\n        const englishCheckResult = await isEnglishWord(text);\r\n        return englishCheckResult ? \"English\" : \"Phonetic\";\r\n    };\r\n\r\n    const handleInput = (field) => {\r\n        setSelectedField(field);\r\n        setInputValue('');\r\n        setAllDetails([]); // Clear all details when a field is selected\r\n    };\r\n\r\n    const handleSearch = async () => {\r\n        let fieldName;\r\n        let apiUrl;\r\n\r\n        const classification = await classifyInput(inputValue);\r\n        if (selectedField === 'inputs' && classification === 'Tamil') {\r\n            apiUrl = 'http://localhost:5000/api/questions';\r\n            fieldName = 'inputs';\r\n        } else if (selectedField === 'inputs' && classification === 'English') {\r\n            apiUrl = 'http://localhost:5000/api/questions';\r\n            fieldName = 'english_input';\r\n        } else {\r\n            fieldName = (() => {\r\n                if (selectedField === 'chapterName' && classification === 'English') {\r\n                    return 'Chapter_Eng';\r\n                }\r\n                if (selectedField === 'chapterName' && classification === 'Phonetic') {\r\n                    return 'Chapter';\r\n                }\r\n                if (selectedField === 'sectionName' && classification === 'English') {\r\n                    return 'section_eng';\r\n                }\r\n                if (selectedField === 'sectionName' && classification === 'Phonetic') {\r\n                    return 'section_trans';\r\n                }\r\n                if (selectedField === 'verse' && classification === 'English') {\r\n                    return 'translation';\r\n                }\r\n                if (selectedField === 'verse' && classification === 'Phonetic') {\r\n                    return 'verse';\r\n                }\r\n                return selectedField;\r\n            })();\r\n\r\n            apiUrl = 'http://localhost:5000/api/kurals';\r\n        }\r\n\r\n        try {\r\n            const response = await axios.get(apiUrl, { params: { [fieldName]: inputValue } });\r\n            setResults(response.data);\r\n            setError('');\r\n        } catch (err) {\r\n            console.error('Error fetching data:', err);\r\n            setError('Error fetching data');\r\n            setResults([]);\r\n        }\r\n    };\r\n\r\n    const fetchAllDetails = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:5000/api/all-details');\r\n            setAllDetails(response.data); // Set the all details data\r\n            setError('');\r\n        } catch (err) {\r\n            console.error('Error fetching all details:', err);\r\n            setError('Error fetching all details');\r\n            setAllDetails([]);\r\n        }\r\n    };\r\n\r\n    const toggleChapter = (chapterId) => {\r\n        setExpandedChapters((prev) => \r\n            prev.includes(chapterId)\r\n                ? prev.filter(id => id !== chapterId)\r\n                : [...prev, chapterId]\r\n        );\r\n    };\r\n\r\n    const toggleSection = (chapterId, sectionIndex) => {\r\n        setExpandedSections((prev) => ({\r\n            ...prev,\r\n            [chapterId]: prev[chapterId]?.includes(sectionIndex)\r\n                ? prev[chapterId].filter(idx => idx !== sectionIndex)\r\n                : [...(prev[chapterId] || []), sectionIndex]\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <h1>Search Thirukkural</h1>\r\n\r\n            <div>\r\n                <label>Select Field:</label>\r\n                <div className={styles.optionsContainer}>\r\n                    <div className={styles.optionBox} onClick={() => handleInput('chapterName')}>Chapter Name</div>\r\n                    <div className={styles.optionBox} onClick={() => handleInput('sectionName')}>Section Name</div>\r\n                    <div className={styles.optionBox} onClick={() => handleInput('verse')}>Verse</div>\r\n                    <div className={styles.optionBox} onClick={() => handleInput('inputs')}>Other Questions</div>\r\n                    <div className={styles.optionBox} onClick={fetchAllDetails}>All Details</div> {/* New option */}\r\n                </div>\r\n            </div>\r\n\r\n            {selectedField && (\r\n                <div>\r\n                    <label>{selectedField.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase())}:</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        value={inputValue} \r\n                        onChange={(e) => setInputValue(e.target.value)} \r\n                    />\r\n                </div>\r\n            )}\r\n\r\n            <button onClick={handleSearch}>Search</button>\r\n\r\n            {error && <p className={styles.error}>{error}</p>}\r\n\r\n            {/* Displaying the results based on selectedField */}\r\n            <ul>\r\n                {results.length > 0 ? results.map((kural, index) => (\r\n                    <li key={index}>\r\n                        {selectedField === 'inputs' ? (\r\n                            <>\r\n                                <p>Answer: {kural.targets}</p>\r\n                                <p>Number: {kural.number}</p>\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                <p>Chapter Name: {kural.chapterName}</p>\r\n                                <p>Chapter Group: {kural.chapter_group_tam}</p>\r\n                                <p>Section Name: {kural.sectionName}</p>\r\n                                <p>Verse: {kural.verse}</p>\r\n                                <p>{kural.translation || 'Not available'}</p>\r\n                                <p>{kural.explanation || 'Not available'}</p>\r\n                                <p>Number: {kural.number}</p>\r\n                            </>\r\n                        )}\r\n                    </li>\r\n                )) : <p>No results found.</p>}\r\n            </ul>\r\n\r\n            {/* Displaying all details with collapsing chapters and sections */}\r\n            {allDetails.length > 0 && (\r\n                <div>\r\n                    <h2>All Details:</h2>\r\n                    <ul>\r\n                        {allDetails.slice(0, 3).map((chapter, index) => (\r\n                            <li key={index}>\r\n                                <h3 onClick={() => toggleChapter(chapter._id)}>\r\n                                    {chapter._id} - {chapter.sections.reduce((sum, section) => sum + section.verses.length, 0)}\r\n                                    {expandedChapters.includes(chapter._id) ? \" ▲\" : \" ▼\"}\r\n                                </h3>\r\n\r\n                                {expandedChapters.includes(chapter._id) && (\r\n                                    <div>\r\n                                        {chapter.sections.map((section, secIndex) => (\r\n                                            <div key={secIndex}>\r\n                                                <h4 onClick={() => toggleSection(chapter._id, secIndex)}>\r\n                                                    {section.sectionName}- {section.verses.length}\r\n                                                    {expandedSections[chapter._id]?.includes(secIndex) ? \" ^\" : \" ▼\"}\r\n                                                </h4>\r\n\r\n                                                {expandedSections[chapter._id]?.includes(secIndex) && (\r\n                                                    <ul>\r\n                                                        {section.verses.map((verse, verseIndex) => (\r\n                                                            <li key={verseIndex}>\r\n                                                                <p>Verse: {verse.verse}</p>\r\n                                                            </li>\r\n                                                        ))}\r\n                                                    </ul>\r\n                                                )}\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                )}\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default KuralSearch;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}