{"ast":null,"code":"var _jsxFileName = \"D:\\\\KURALBOT\\\\my-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/App.js\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route, useNavigate } from 'react-router-dom';\nimport LanguageSelection from './LanguageSelection';\nimport KuralSearch from './KuralSearch';\nimport './App.css'; // Import the global styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [selectedLanguage, setSelectedLanguage] = useState('Tamil'); // Default to Tamil\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"KuralBot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(LanguageSelectionWrapper, {\n              setSelectedLanguage: setSelectedLanguage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/search\",\n            element: /*#__PURE__*/_jsxDEV(KuralSearch, {\n              selectedLanguage: selectedLanguage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 56\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n\n// Wrapper to handle language selection and navigation to search page\n_s(App, \"1gC9Xayp4eoOMn4swMfX+OTXWtc=\");\n_c = App;\nconst LanguageSelectionWrapper = ({\n  setSelectedLanguage\n}) => {\n  _s2();\n  const navigate = useNavigate(); // For navigating to /search after selection\n\n  const handleLanguageChange = language => {\n    setSelectedLanguage(language);\n    if (language === 'English') {} else {}\n    // Redirect to the search page after selecting language\n  };\n  return /*#__PURE__*/_jsxDEV(LanguageSelection, {\n    onLanguageChange: handleLanguageChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 12\n  }, this);\n};\n_s2(LanguageSelectionWrapper, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c2 = LanguageSelectionWrapper;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"LanguageSelectionWrapper\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Routes","Route","useNavigate","LanguageSelection","KuralSearch","jsxDEV","_jsxDEV","App","_s","selectedLanguage","setSelectedLanguage","children","className","fileName","_jsxFileName","lineNumber","columnNumber","path","element","LanguageSelectionWrapper","_c","_s2","navigate","handleLanguageChange","language","onLanguageChange","_c2","$RefreshReg$"],"sources":["D:/KURALBOT/my-frontend/src/App.js"],"sourcesContent":["// src/App.js\r\nimport React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, useNavigate } from 'react-router-dom';\r\nimport LanguageSelection from './LanguageSelection';\r\nimport KuralSearch from './KuralSearch';\r\nimport './App.css'; // Import the global styles\r\n\r\nconst App = () => {\r\n    const [selectedLanguage, setSelectedLanguage] = useState('Tamil'); // Default to Tamil\r\n\r\n    return (\r\n        <Router>\r\n            <div className=\"App\">\r\n                <header className=\"App-header\">\r\n                    <h1>KuralBot</h1>\r\n                </header>\r\n                <main>\r\n                    <Routes>\r\n                        <Route path=\"/\" element={<LanguageSelectionWrapper setSelectedLanguage={setSelectedLanguage} />} />\r\n                        <Route path=\"/search\" element={<KuralSearch selectedLanguage={selectedLanguage} />} />\r\n                    </Routes>\r\n                </main>\r\n            </div>\r\n        </Router>\r\n    );\r\n};\r\n\r\n// Wrapper to handle language selection and navigation to search page\r\nconst LanguageSelectionWrapper = ({ setSelectedLanguage }) => {\r\n    const navigate = useNavigate(); // For navigating to /search after selection\r\n\r\n    const handleLanguageChange = (language) => {\r\n        setSelectedLanguage(language);\r\n        if (language === 'English') {\r\n        } else {\r\n        }\r\n         // Redirect to the search page after selecting language\r\n    };\r\n\r\n    return <LanguageSelection onLanguageChange={handleLanguageChange} />;\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,WAAW,QAAQ,kBAAkB;AACtF,OAAOC,iBAAiB,MAAM,qBAAqB;AACnD,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,WAAW,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGb,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;;EAEnE,oBACIS,OAAA,CAACP,MAAM;IAAAY,QAAA,eACHL,OAAA;MAAKM,SAAS,EAAC,KAAK;MAAAD,QAAA,gBAChBL,OAAA;QAAQM,SAAS,EAAC,YAAY;QAAAD,QAAA,eAC1BL,OAAA;UAAAK,QAAA,EAAI;QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb,CAAC,eACTV,OAAA;QAAAK,QAAA,eACIL,OAAA,CAACN,MAAM;UAAAW,QAAA,gBACHL,OAAA,CAACL,KAAK;YAACgB,IAAI,EAAC,GAAG;YAACC,OAAO,eAAEZ,OAAA,CAACa,wBAAwB;cAACT,mBAAmB,EAAEA;YAAoB;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACnGV,OAAA,CAACL,KAAK;YAACgB,IAAI,EAAC,SAAS;YAACC,OAAO,eAAEZ,OAAA,CAACF,WAAW;cAACK,gBAAgB,EAAEA;YAAiB;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEjB,CAAC;;AAED;AAAAR,EAAA,CApBMD,GAAG;AAAAa,EAAA,GAAHb,GAAG;AAqBT,MAAMY,wBAAwB,GAAGA,CAAC;EAAET;AAAoB,CAAC,KAAK;EAAAW,GAAA;EAC1D,MAAMC,QAAQ,GAAGpB,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC,MAAMqB,oBAAoB,GAAIC,QAAQ,IAAK;IACvCd,mBAAmB,CAACc,QAAQ,CAAC;IAC7B,IAAIA,QAAQ,KAAK,SAAS,EAAE,CAC5B,CAAC,MAAM,CACP;IACC;EACL,CAAC;EAED,oBAAOlB,OAAA,CAACH,iBAAiB;IAACsB,gBAAgB,EAAEF;EAAqB;IAAAV,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACxE,CAAC;AAACK,GAAA,CAZIF,wBAAwB;EAAA,QACTjB,WAAW;AAAA;AAAAwB,GAAA,GAD1BP,wBAAwB;AAc9B,eAAeZ,GAAG;AAAC,IAAAa,EAAA,EAAAM,GAAA;AAAAC,YAAA,CAAAP,EAAA;AAAAO,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}