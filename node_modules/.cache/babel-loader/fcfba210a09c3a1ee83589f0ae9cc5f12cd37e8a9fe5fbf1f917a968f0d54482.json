{"ast":null,"code":"var _jsxFileName = \"D:\\\\KURALBOT\\\\my-frontend\\\\src\\\\KuralSearch.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport styles from './KuralSearch.module.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst KuralSearch = () => {\n  _s();\n  const [selectedField, setSelectedField] = useState('');\n  const [inputValue, setInputValue] = useState('');\n  const [results, setResults] = useState([]);\n  const [error, setError] = useState('');\n  const isTamil = text => /[\\u0B80-\\u0BFF]/.test(text); // Check for Tamil characters\n\n  const isPhoneticEnglish = text => {\n    const commonPhoneticPatterns = ['aa', 'ee', 'ii', 'oo', 'uu', 'la', 'ra', 'na', 'th', 'zh', 'ng', 'ch', 'ka', 'ki', 'ku', 'ke', 'kai', 'ko', 'kau', 'kh', 'kha', 'khi', 'khu', 'ga', 'gi', 'gu', 'ge', 'gai', 'go', 'gau', 'gh', 'gha', 'ghi', 'ghu', 'cha', 'chi', 'chu', 'che', 'chai', 'cho', 'chau', 'chh', 'chha', 'chhi', 'chhu', 'ja', 'ji', 'ju', 'je', 'jai', 'jo', 'jau', 'jh', 'jha', 'jhi', 'jhu', 'ta', 'ti', 'tu', 'te', 'tai', 'to', 'tau', 'th', 'tha', 'thi', 'thu', 'da', 'di', 'du', 'de', 'dai', 'do', 'dau', 'dh', 'dha', 'dhi', 'dhu', 'na', 'ni', 'nu', 'ne', 'nai', 'no', 'nau', 'nh', 'nha', 'nhi', 'nhu', 'pa', 'pi', 'pu', 'pe', 'pai', 'po', 'pau', 'ph', 'pha', 'phi', 'phu', 'ba', 'bi', 'bu', 'be', 'bai', 'bo', 'bau', 'bh', 'bha', 'bhi', 'bhu', 'ma', 'mi', 'mu', 'me', 'mai', 'mo', 'mau', 'mh', 'mha', 'mhi', 'mhu', 'ya', 'yi', 'yu', 'ye', 'yai', 'yo', 'yau', 'yh', 'yha', 'yhi', 'yhu', 'ra', 'ri', 'ru', 're', 'rai', 'ro', 'rau', 'rh', 'rha', 'rhi', 'rhu', 'la', 'li', 'lu', 'le', 'lai', 'lo', 'lau', 'lh', 'lha', 'lhi', 'lhu', 'va', 'vi', 'vu', 've', 'vai', 'vo', 'vau', 'vh', 'vha', 'vhi', 'vhu', 'sa', 'si', 'su', 'se', 'sai', 'so', 'sau', 'sh', 'sha', 'shi', 'shu', 'ha', 'hi', 'hu', 'he', 'hai', 'ho', 'hau', 'hh', 'hha', 'hhi', 'hhu'];\n    return commonPhoneticPatterns.some(pattern => text.includes(pattern));\n  };\n  const isEnglishWord = async word => {\n    try {\n      // Log the word being checked\n      console.log(`Checking word: \"${word}\"`);\n      const response = await axios.get('https://api.dictionaryapi.dev/api/v2/entries/en/' + word);\n\n      // Log the API response\n      console.log('API Response:', response.data);\n\n      // Check if the response data is valid and contains the expected structure\n      if (response.data && response.data.length > 0) {\n        const isMatch = response.data[0].word.toLowerCase() === word.toLowerCase();\n        console.log(`Match found for \"${word}\": ${isMatch}`);\n        setIsWordEnglish(isMatch); // Update state based on match\n        return isMatch; // Return true if it matches\n      }\n      console.log(`No definitions found for \"${word}\".`);\n      return false; // No definitions found\n    } catch (error) {\n      if (error.response && error.response.status === 404) {\n        console.log(`404 Error: No definition found for \"${word}\".`);\n        setIsWordEnglish(false); // Set English word status to false for 404\n        return false; // Return false for 404 errors\n      }\n      console.error('Error checking English word:', error);\n      return false; // Return false for other errors\n    }\n  };\n  const classifyInput = async text => {\n    if (isTamil(text)) {\n      return \"Tamil\";\n    } else if (await isEnglishWord(text)) {\n      return \"English\";\n    } else {\n      return \"Phonetic\";\n    }\n  };\n  const handleInput = field => {\n    setSelectedField(field); // Set the selected field when a box is clicked\n    setInputValue(''); // Clear previous input if any\n  };\n  const handleSearch = async () => {\n    let fieldName;\n    let apiUrl;\n    if (selectedField === 'inputs' && classifyInput(inputValue) === 'Tamil') {\n      apiUrl = 'http://localhost:5000/api/questions';\n      fieldName = 'inputs';\n    } else if (selectedField === 'inputs' && classifyInput(inputValue) === 'English') {\n      apiUrl = 'http://localhost:5000/api/questions';\n      fieldName = 'english_input';\n    } else {\n      fieldName = (() => {\n        if (selectedField === 'chapterName' && classifyInput(inputValue) === 'English') {\n          return 'Chapter_Eng';\n        }\n        if (selectedField === 'chapterName' && classifyInput(inputValue) === 'Phonetic') {\n          return 'Chapter';\n        }\n        if (selectedField === 'sectionName' && classifyInput(inputValue) === 'English') {\n          return 'section_eng';\n        }\n        if (selectedField === 'sectionName' && classifyInput(inputValue) === 'Phonetic') {\n          return 'section_trans';\n        }\n        if (selectedField === 'verse' && classifyInput(inputValue) === 'English') {\n          return 'translation';\n        }\n        if (selectedField === 'verse' && classifyInput(inputValue) === 'Phonetic') {\n          return 'verse';\n        }\n        return selectedField;\n      })();\n      apiUrl = 'http://localhost:5000/api/kurals';\n    }\n    try {\n      const response = await axios.get(apiUrl, {\n        params: {\n          [fieldName]: inputValue\n        }\n      });\n      setResults(response.data);\n      setError('');\n    } catch (err) {\n      console.error('Error fetching data:', err);\n      setError('Error fetching data');\n      setResults([]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Search Thirukkural\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Field:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.optionsContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.optionBox,\n          onClick: () => handleInput('chapterName'),\n          children: \"Chapter Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.optionBox,\n          onClick: () => handleInput('sectionName'),\n          children: \"Section Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.optionBox,\n          onClick: () => handleInput('verse'),\n          children: \"Verse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.optionBox,\n          onClick: () => handleInput('inputs'),\n          children: \"Other Questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), selectedField && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [selectedField.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase()), \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.error,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: results.length > 0 ? results.map((kural, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: selectedField === 'inputs' ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Answer: \", kural.targets]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Chapter Name: \", kural.chapterName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Chapter Group: \", kural.chapter_group_tam]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Section Name: \", kural.sectionName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Verse: \", kural.verse]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Translation: \", kural.translation || 'Not available']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Explanation: \", kural.explanation || 'Not available']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Number: \", kural.number]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 22\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 9\n  }, this);\n};\n_s(KuralSearch, \"OnU/UXUHk2uCGrRGscZbgbYXox0=\");\n_c = KuralSearch;\nexport default KuralSearch;\nvar _c;\n$RefreshReg$(_c, \"KuralSearch\");","map":{"version":3,"names":["React","useState","axios","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","KuralSearch","_s","selectedField","setSelectedField","inputValue","setInputValue","results","setResults","error","setError","isTamil","text","test","isPhoneticEnglish","commonPhoneticPatterns","some","pattern","includes","isEnglishWord","word","console","log","response","get","data","length","isMatch","toLowerCase","setIsWordEnglish","status","classifyInput","handleInput","field","handleSearch","fieldName","apiUrl","params","err","className","container","children","fileName","_jsxFileName","lineNumber","columnNumber","optionsContainer","optionBox","onClick","replace","str","toUpperCase","type","value","onChange","e","target","map","kural","index","targets","chapterName","chapter_group_tam","sectionName","verse","translation","explanation","number","_c","$RefreshReg$"],"sources":["D:/KURALBOT/my-frontend/src/KuralSearch.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport styles from './KuralSearch.module.css';\r\nconst KuralSearch = () => {\r\n    const [selectedField, setSelectedField] = useState('');\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [results, setResults] = useState([]);\r\n    const [error, setError] = useState('');\r\n\r\n    const isTamil = (text) => /[\\u0B80-\\u0BFF]/.test(text);  // Check for Tamil characters\r\n\r\n    const isPhoneticEnglish = (text) => {\r\n        const commonPhoneticPatterns = [\r\n            'aa', 'ee', 'ii', 'oo', 'uu', 'la', 'ra', 'na', 'th', 'zh', 'ng', 'ch',\r\n            'ka', 'ki', 'ku', 'ke', 'kai', 'ko', 'kau', 'kh', 'kha', 'khi', 'khu',\r\n            'ga', 'gi', 'gu', 'ge', 'gai', 'go', 'gau', 'gh', 'gha', 'ghi', 'ghu',\r\n            'cha', 'chi', 'chu', 'che', 'chai', 'cho', 'chau', 'chh', 'chha', 'chhi', 'chhu',\r\n            'ja', 'ji', 'ju', 'je', 'jai', 'jo', 'jau', 'jh', 'jha', 'jhi', 'jhu',\r\n            'ta', 'ti', 'tu', 'te', 'tai', 'to', 'tau', 'th', 'tha', 'thi', 'thu',\r\n            'da', 'di', 'du', 'de', 'dai', 'do', 'dau', 'dh', 'dha', 'dhi', 'dhu',\r\n            'na', 'ni', 'nu', 'ne', 'nai', 'no', 'nau', 'nh', 'nha', 'nhi', 'nhu',\r\n            'pa', 'pi', 'pu', 'pe', 'pai', 'po', 'pau', 'ph', 'pha', 'phi', 'phu',\r\n            'ba', 'bi', 'bu', 'be', 'bai', 'bo', 'bau', 'bh', 'bha', 'bhi', 'bhu',\r\n            'ma', 'mi', 'mu', 'me', 'mai', 'mo', 'mau', 'mh', 'mha', 'mhi', 'mhu',\r\n            'ya', 'yi', 'yu', 'ye', 'yai', 'yo', 'yau', 'yh', 'yha', 'yhi', 'yhu',\r\n            'ra', 'ri', 'ru', 're', 'rai', 'ro', 'rau', 'rh', 'rha', 'rhi', 'rhu',\r\n            'la', 'li', 'lu', 'le', 'lai', 'lo', 'lau', 'lh', 'lha', 'lhi', 'lhu',\r\n            'va', 'vi', 'vu', 've', 'vai', 'vo', 'vau', 'vh', 'vha', 'vhi', 'vhu',\r\n            'sa', 'si', 'su', 'se', 'sai', 'so', 'sau', 'sh', 'sha', 'shi', 'shu',\r\n            'ha', 'hi', 'hu', 'he', 'hai', 'ho', 'hau', 'hh', 'hha', 'hhi', 'hhu',\r\n        ];\r\n        return commonPhoneticPatterns.some(pattern => text.includes(pattern));\r\n    };\r\n    const isEnglishWord = async (word) => {\r\n        try {\r\n            // Log the word being checked\r\n            console.log(`Checking word: \"${word}\"`);\r\n    \r\n            const response = await axios.get('https://api.dictionaryapi.dev/api/v2/entries/en/' + word);\r\n            \r\n            // Log the API response\r\n            console.log('API Response:', response.data);\r\n    \r\n            // Check if the response data is valid and contains the expected structure\r\n            if (response.data && response.data.length > 0) {\r\n                const isMatch = response.data[0].word.toLowerCase() === word.toLowerCase();\r\n                console.log(`Match found for \"${word}\": ${isMatch}`);\r\n                setIsWordEnglish(isMatch); // Update state based on match\r\n                return isMatch; // Return true if it matches\r\n            }\r\n            console.log(`No definitions found for \"${word}\".`);\r\n            return false; // No definitions found\r\n        } catch (error) {\r\n            if (error.response && error.response.status === 404) {\r\n                console.log(`404 Error: No definition found for \"${word}\".`);\r\n                setIsWordEnglish(false); // Set English word status to false for 404\r\n                return false; // Return false for 404 errors\r\n            }\r\n\r\n            console.error('Error checking English word:', error);\r\n            return false; // Return false for other errors\r\n        }\r\n    }\r\n    \r\n    const classifyInput = async (text) => {\r\n        if (isTamil(text)) {\r\n            return \"Tamil\";\r\n        } else if (await isEnglishWord(text)) {\r\n            return \"English\";\r\n        } else {\r\n            return \"Phonetic\";\r\n        }\r\n    };\r\n\r\n    const handleInput = (field) => {\r\n        setSelectedField(field); // Set the selected field when a box is clicked\r\n        setInputValue(''); // Clear previous input if any\r\n    };\r\n\r\n    const handleSearch = async () => {\r\n        let fieldName;\r\n        let apiUrl;\r\n\r\n        if (selectedField === 'inputs'&& classifyInput(inputValue) === 'Tamil') {\r\n            apiUrl = 'http://localhost:5000/api/questions';\r\n            fieldName = 'inputs';\r\n        }\r\n        else if(selectedField === 'inputs'&& classifyInput(inputValue) === 'English') {\r\n            apiUrl = 'http://localhost:5000/api/questions';\r\n            fieldName = 'english_input';\r\n        } else {\r\n            fieldName = (() => {\r\n                if (selectedField === 'chapterName' && classifyInput(inputValue) === 'English') {\r\n                    return 'Chapter_Eng';\r\n                } \r\n                if (selectedField === 'chapterName' && classifyInput(inputValue) === 'Phonetic') {\r\n                    return 'Chapter';\r\n                }\r\n                if (selectedField === 'sectionName' && classifyInput(inputValue) === 'English') {\r\n                    return 'section_eng';\r\n                }\r\n                if (selectedField === 'sectionName' && classifyInput(inputValue) === 'Phonetic') {\r\n                    return 'section_trans';\r\n                }\r\n                if (selectedField === 'verse' && classifyInput(inputValue) === 'English') {\r\n                    return 'translation';\r\n                }\r\n                if (selectedField === 'verse' && classifyInput(inputValue) === 'Phonetic') {\r\n                    return 'verse';\r\n                }\r\n                \r\n                return selectedField;\r\n            })();\r\n\r\n            apiUrl = 'http://localhost:5000/api/kurals'; \r\n        }\r\n\r\n        try {\r\n            const response = await axios.get(apiUrl, { params: { [fieldName]: inputValue } });\r\n            setResults(response.data);\r\n            setError('');\r\n        } catch (err) {\r\n            console.error('Error fetching data:', err);\r\n            setError('Error fetching data');\r\n            setResults([]);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <h1>Search Thirukkural</h1>\r\n            \r\n            <div>\r\n                <label>Select Field:</label>\r\n                <div className={styles.optionsContainer}>\r\n                    <div className={styles.optionBox} onClick={() => handleInput('chapterName')}>Chapter Name</div>\r\n                    <div className={styles.optionBox} onClick={() => handleInput('sectionName')}>Section Name</div>\r\n                    <div className={styles.optionBox} onClick={() => handleInput('verse')}>Verse</div>\r\n                    <div className={styles.optionBox} onClick={() => handleInput('inputs')}>Other Questions</div>\r\n                </div>\r\n            </div>\r\n\r\n            {selectedField && (\r\n                <div>\r\n                    <label>{selectedField.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase())}:</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        value={inputValue} \r\n                        onChange={(e) => setInputValue(e.target.value)} \r\n                    />\r\n                </div>\r\n            )}\r\n            \r\n            <button onClick={handleSearch}>Search</button>\r\n\r\n            {error && <p className={styles.error}>{error}</p>}\r\n\r\n            <ul>\r\n                {results.length > 0 ? results.map((kural, index) => (\r\n                    <li key={index}>\r\n                         {selectedField === 'inputs' ? (\r\n                            <p>Answer: {kural.targets}</p>\r\n                        ) : (\r\n                            <>\r\n                                <p>Chapter Name: {kural.chapterName}</p>\r\n                                <p>Chapter Group: {kural.chapter_group_tam}</p>\r\n                                <p>Section Name: {kural.sectionName}</p>\r\n                                <p>Verse: {kural.verse}</p>\r\n                                <p>Translation: {kural.translation || 'Not available'}</p>\r\n                                <p>Explanation: {kural.explanation || 'Not available'}</p>\r\n                                <p>Number: {kural.number}</p>\r\n                            </>\r\n                        )}\r\n                    </li>\r\n                )) : <p></p>}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default KuralSearch;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAC9C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMiB,OAAO,GAAIC,IAAI,IAAK,iBAAiB,CAACC,IAAI,CAACD,IAAI,CAAC,CAAC,CAAE;;EAEzD,MAAME,iBAAiB,GAAIF,IAAI,IAAK;IAChC,MAAMG,sBAAsB,GAAG,CAC3B,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EACtE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EACrE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EACrE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAChF,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EACrE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EACrE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EACrE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EACrE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EACrE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EACrE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EACrE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EACrE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EACrE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EACrE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EACrE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EACrE,IAAI,EAAE,IAAI,EAAE,IAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}